name: User Service CI/CD

on:
  push:
    branches:
      - app/deployment

jobs:
  deploy:
    name: CI/CD Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16.17']

    steps:
      - name: Checkout Git Branch
      - uses: actions/checkout@v2

      - name: Set up Backend Environment
        run: |
          cp ./backend/env-template.txt ./backend/.env
          sed -i -e "s/_DATABASE_HOST/${{ secrets.DATABASE_HOST }}/g" ./backend/.env
          sed -i -e "s/_DATABASE_USERNAME/${{ secrets.DATABASE_USERNAME }}/g" ./backend/.env
          sed -i -e "s/_DATABASE_PASSWORD/${{ secrets.DATABASE_PASSWORD }}/g" ./backend/.env
          sed -i -e "s/_DATABASE_DATABASE/${{ secrets.DATABASE_DATABASE }}/g" ./backend/.env
          cat ./backend/.env

      - name: Set Build Tag
        id: build-tag
        run: echo "BUILD_TAG=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: docker build . -t kyleuniversities/user-service-js:${{ steps.build-tag.outputs.BUILD_TAG }} --progress=plain --no-cache

        - name: Push Docker Image
        run: docker push kyleuniversities/user-service-js:${{ steps.build-tag.outputs.BUILD_TAG }} --progress=plain --no-cache 

        - name: Update Dockerrun.aws.json with Build Tag
        run: sed -i -e "s/_latest_tag/${{ steps.build-tag.outputs.BUILD_TAG }}/g" ./Dockerrun.aws.json 

        - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-tag.outputs.BUILD_TAG }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 60
          

